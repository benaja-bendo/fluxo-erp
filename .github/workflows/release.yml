name: Windows Release Build

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows MSI
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean package

      - name: Install WiX
        run: choco install wixtoolset -y

      - name: Setup JavaFX modules
        run: |
          $FX_VERSION="21.0.2"
          $FX_URL="https://download2.gluonhq.com/openjfx/$FX_VERSION/openjfx-${FX_VERSION}_windows-x64_bin-jmods.zip"
          Invoke-WebRequest -Uri $FX_URL -OutFile "openjfx.zip"
          Expand-Archive -Path "openjfx.zip" -DestinationPath "."

      - name: Create Windows installer
        run: |
          $JMODS_PATH = "D:\a\fluxo-erp\fluxo-erp\javafx-jmods-21.0.2"
          Write-Host "JavaFX modules path: $JMODS_PATH"
          
          jpackage `
            --input target `
            --name FluxoApp `
            --main-jar Fluxo-0.0.1-SNAPSHOT.jar `
            --type msi `
            --icon src/main/resources/icons/win/icon.ico `
            --module-path "$JMODS_PATH" `
            --add-modules javafx.controls,javafx.fxml `
            --java-options "--add-opens java.base/java.lang=ALL-UNNAMED" `
            --java-options "--add-opens java.base/java.io=ALL-UNNAMED" `
            --win-console `
            --dest installer/win

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Installer
          path: installer/win/*.msi

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: App-JAR
          path: target/Fluxo-*.jar

  create-release:
    name: Create GitHub Release
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download MSI Installer
        uses: actions/download-artifact@v4
        with:
          name: Windows-Installer
          path: installer

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: App-JAR
          path: jar

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Installer Windows pour FluxoApp
          files: |
            installer/*.msi
            jar/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}